cmdhistory=["foo" "foo 1" "(foo \\"hart loves licking butts\\")" "4" "0" "(foo)" "(foo 4)" "(foo 5)" "(foo)" "(foo 4)" "(foo 3)" "(gcd 3 100)" "(gcd 3 1000)" "(gcd [ 3 1000])" "(+ 400 300)" "(println (factorial 5))" "(println(factorial 5))" "(println(gcd 3 100))" "(println (3 1000))" "(println (gcd (3 1000)))" "(println (factorial (5)))" "(factorial 5)" "(find-needle \\"|\\" \\"hay|stack\\")" "(print (gcd (5 3))\\n       )" "(gcd (5 3 ))" "(gcd [5 3])" "(gcd [int 5 int 3])" "(gcd(5)(3))" "(factorial (5))" "(factorial 5)" "(print (factorial (5)))" "(factorial (4))" "(factorial (1))" "(factorial(1))" "(factorial 9)" "(print (factorial(9)))" "(factorial(5))" "factorial(5)" "(factorial(5))" "(factorial (5))" "(factorial(5))" "(factorial (5))" "(factorial 5)" "( gcd 5 100)" "(gcd 5 100)" "(gcd 5 15)" "(gcd 3 1000)" "(gcd 5 15)" "(gcd 3 1000)" "(totient 7)" "(totient 4)" "(totient 6)" "(totient 7)" "(totient 6)" "(totient 4)" "(totient 3)" "(totient 5)" "(gcd 3 6)" "(totient 1000)" "(totient (pow 10 8))" "(totient (expt 10 8))" "(expt 10 8)" "(expn 10 9)" "(exp 10 9)" "(exp 2 24)" "(totient (exp 10 9))" "(totient (exp 10 8))" "(exp 1777 1777)" "(fact 1000)" "(factorial 1000)" "(problem188)" "(problem188 3)" "(exp (exp (exp (exp (3 3)3)3)3)3)" "(exp (exp (exp (exp 3 3)3)3)3)" "(problem183 3)" "(problem188 3)" "(problem188 1777)" "(problem188 3)" "(problem188)" "(tetration 1777 1855)" "(exp 1777 23786737)" "  (mod (exp 3(tetration 3 5) )(exp 10 8))" "(tetration 3 5)" "(exp 3 29892803)" "(problem188)" "(tetration 3 5)" "(problem188)" "(tetration 3 3)" "(problem188)" "(tetration 1777 1855)" "(problem188)" "(mod(exp 1777 1777) 1000)" "(exp 1777 1777)" "(problem188)" "(tetration 1777 1885)" "(tetration 1777 1855)" "(problem188)" "(tetration 1777 1855)" "(problem188)" "(exp 3 27)" "(exp 3 (exp 3 27))" "(tetration 3 3)" "(problem188)" "(tetration 3 5)" "(tetration 3 3)" "(tetration 3 4)" "(tetration 3 5)" "(exp 3 37484987)" "(tetration 3 5)" "(tetration 3 4)" "(tetration 2 4)" "(tetration 2 5)" "(tetration 2 6)" "(tetration 2 8)" "(tetration 3 4)" "(tetration 1777 1855)" "(tetration 3 3)" "(tetration 3 4)" "(tetration 3 5)" "(problem188)" "(problem1855)" "(problem188)" "(tetration 3 5)" "(tetration 3 4)" "(tetration 3 3)" "(tetration 3 2)" "(tetration 1777 1855)" "(problem56)" "(espsSum 3 3)" "(expsSum 3 3)" "(expsSum 2 4)" "(problem56)" "(expsSum 100 100)" "(problem56)" "(expsSum 99 99)" "(expsSum 99 98)" "(problem56)" "(take 20 (fib-seq))" "(take 50 (fib-seq))" "(take 100 (fib-seq))" "(take 100(fib-seq))" "(take 100 (fib-seq))" "(isPrime 7)" "(squareremainders 7 3)" "(squareremainders 3 7)" "(squareremainders 7 3)" "(squrem 7 3)" "(squrem 7 7)" "(squrem 7 6)" "(squrem 7 8)" "(squrem 7 9)" "(squrem 7 25)" "(squrem 7 100)" "(squrem 7 101)" "(squrem 2 4)" "(squrem 2 3)" "(squrem 2 2)" "(squrem 2 5)" "(squrem 7 1)" "(squrem 7 2)" "(squrem 7 3)" "(squrem 7 4)" "(squrem 7 5)" "(squrem 7 6)" "(squrem 7 7)" "(squrem 7 8)" "(squrem 7 9)" "(squrem 7 10)" "(squrem 7 11)" "(squrem 8 1)" "(squrem 8 2)" "(squrem 8 3)" "(squrem 8 4)" "(squrem 8 5)" "(squrem 8 6)" "(squrem 8 7)" "(squrem 9 2)" "(squrem 9 3)" "(squrem 9 4)" "(squrem 9 5)" "(squrem 10 3)" "(squrem 10 4)" "(squrem 11 3)" "(squrem 11 4)" "(squrem 12 3)" "(squrem 12 4)" "(squrem 13 3)" "(squrem 13 4)" "(squrem 14 3)" "(squrem 14 4)" "(squrem 15 3)" "(squrem 15 4)" "(squrem 15 5)" "(squrem 15 6)" "(squrem 15 7)" "(squrem 13 5)" "(squrem 13 7)" "(squrem 13 9)" "(squrem 13 11)" "(squrem 13 13)" "(squrem 15 13)" "(squrem 15 15)" "(problem56)" "(problem120)" "(maxSqurem 6)" "(squrem 5 4)" "(squrem 5 3)" "(squrem 5 2)" "(maxSqurem 5)" "(problem120)" "(map \#(+ % 5) '(1 2 3))" "(filter \#(> % 5) '(3 4 5 6 7))" "(hasrshad 201)" "(harshad 201)" "(sumOfDigits(split-digits 201))" "(harshad 201)" "(mod 201 3)" "(harshad 201)" "(harshad 200)" "(mod 200 (sumOfDigits(split-digits 200)))" "(harshad 7)" "(mod 7 (sumOfDigits(split-digits 7)))" "(harshad 13)" "(truncatableharshad 201)" "(apply str (re-seq \#\\"[A-Z]+\\" \\"bA1B3Ce \\"))" "(> 1 8 3 4)" "(apply > 1 8 3 4)" "(if-not false 1 0)" "destructureDNA" "(destructureDNA)" "(\#(map list % '( \\"stuff\\" 320 \\"aaaaba\\" 4 5)DNAMap))" "(destructureDNA)" "(for [x (iterate \#(+ 4 %) 0)\\r\\n            \:let [z (inc x)]\\r\\n            \:while (< z 40)]\\r\\n        z)" "(destructureDNA)" "(problem56)" "(destructureDNA)" "(desSequence)" "(destructureDNA)" "(desSequence DNAMap)" "(desSequence AAMap)" "(newGMap 1 2 3 4)" "(newGMap (1 2 3 4))" "(into (sorted-map) [ [\:a 1] [\:c 3] [\:b 2] ] )" "(into (map) [ [\:a 1] [\:c 3] [\:b 2] ] )" "(into (hash-map) [ [\:a 1] [\:c 3] [\:b 2] ] )" "(newGMap 1 2 3 4)" "(newAAMap 1 2 34 5 6)" "(newAAMap 1 2 3 4 5)" "(require '[clojure.string \:as str])" " (str/split \\"Clojure is awesome\!\\" \#\\" \\")" "(makeDatabase \\"database.txt\\")" " (makeDatabase \\"Desktop/databases/database.txt\\")" "\=> (makeDatabase \\"Desktop\\\\databases\\\\database.txt\\")" "(re-find \#\\"1\\" { 2 3 5 1})" "(re-find 1 { 2 3 5 1})" "(re-find \#\\"1\\" { \\"2\\" \\"3\\" \\"5\\" \\"1\\"})" "(re-find \#\\"1\\" [ 2 3 5 1])" "(re-find \#\\"1\\" \\" 2 3 5 1\\")" "(re-find \#\:label\\"1\\"  {\:label 2 \:label 3 \:label 5 \:label 1})" "\=> (re-find \#\:label\\"1\\"  {[\:label 2] [\:label 3] [\:label 5] [\:label 1]})" "\=> (re-find \#\:label 1  {\:label 2 \:label 3 \:label 5 \:label 1})" "\=> \=> (re-find \#(\:label 1)  {\:label 2 \:label 3 \:label 5 \:label 1})"]
eclipse.preferences.version=1
