//Author:Stephen Kinser
//Problem 44
/*
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
*/
#include <iostream>
#include <vector>
#include <algorithm>
#include <math.h> /* sqrt */

int main()
{

  int min = 99999999999;
  int sum, difference;
  std::vector<int> pentagon;
  std::vector<int>::iterator s, d, o;
  for (int i = 1; i <= 5000; i++)
  {
    //Pn=n(3n−1)/2
    pentagon.push_back(i * ((3 * i) - 1) / 2);
  }
  for (int j = 0; j < 5000; j++)
  {
    for (int k = j; k < 5000; k++)
    {
      sum = pentagon[k] + pentagon[j];
      //can't tell is difference is p[k]-p[j] or p[j]-p[k], so do both
      difference = abs(pentagon[k] - pentagon[j]);

      s = find(pentagon.begin(), pentagon.end(), sum);
      d = find(pentagon.begin(), pentagon.end(), difference);
      difference = abs(pentagon[j] - pentagon[k]);
      o = find(pentagon.begin(), pentagon.end(), difference);
      if (s != pentagon.end() && (d != pentagon.end() || o != pentagon.end()) && difference < min)
      {
        min = difference;
      }
    }
  }
  std::cout << min << '\n';
}